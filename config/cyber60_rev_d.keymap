#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define FN1 1

/ {
    combos {
        compatible = "zmk,combos";

        vimleft {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <63 35>;
            layers = <0>;
        };

        vimdown {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <63 36>;
            layers = <0>;
        };

        vimup {
            bindings = <&kp UP_ARROW>;
            key-positions = <37 63>;
            layers = <0>;
        };

        vimright {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <63 38>;
            layers = <0>;
        };

        myhome {
            bindings = <&kp HOME>;
            key-positions = <21 63>;
            layers = <0>;
        };

        mylast {
            bindings = <&kp END>;
            key-positions = <63 22>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // Base layer
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |NUHS| ENTER   |
            // | SHIFT |NUBS| Z |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |    Shift   | FN |
            // |  LCTL  |  LWIN  |  LALT  | SPACE  | SPACE |    SPACE   |  RALT | FN  |   RWIN  | RCTRL |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&kp ESC     &kp N1    &kp N2    &kp N3     &kp N4     &kp N5     &kp N6    &kp N7  &kp N8    &kp N9     &kp N0    &kp MINUS  &kp EQUAL  &kp BACKSPACE  &kp DELETE
&kp TAB     &kp Q     &kp W     &kp E      &kp R      &kp T      &kp Y     &kp U   &kp I     &kp O      &kp P     &kp LBKT   &kp RBKT   &kp BSLH
&mo 2       &kp A     &kp S     &kp D      &kp F      &kp G      &kp H     &kp J   &kp K     &kp L      &kp SEMI  &kp SQT    &kp NUHS   &kp RET
&kp LSHFT   &kp NUBS  &kp Z     &kp X      &kp C      &kp V      &kp B     &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &mo 1
&kp LCTRL   &kp LGUI  &kp LALT  &kp SPACE  &kp SPACE  &kp SPACE  &kp RALT  &mo 1   &kp RGUI  &kp RCTRL
&kp C_MUTE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        fn_layer {
            // Function layer
            // ------------------------------------------------------------------------------------------
            // | RESET | F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |TRNS | DEL |
            // |BT_CLR |TRNS | UP  | BT0 | BT1 | BT2 | BT3 | BT4 | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS|
            // | BOOTL  |LEFT |DOWN |RIGHT|TRNS |TRNS |TRNS | TRNS| TRNS |TRNS| TRNS |TRNS | TRNS | TRNS  |
            // | TRNS |TRNS|TRNS|TRNS|TRNS | TRNS| TRNS | TRNS |  TRNS| TRNS | TRNS| TRNS |   TRNS   |TRNS|
            // |  TRNS | TRNS | TRNS |      TRNS      | TRNS |     TRNS     |  TRNS |  TRNS | TRNS | TRNS |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&sys_reset   &kp F1    &kp F2           &kp F3           &kp F4           &kp F5           &kp F6           &kp F7           &kp F8           &kp F9  &kp F10  &kp F11  &kp F12  &trans  &kp DEL
&bt BT_CLR   &trans    &kp UP           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans           &trans  &trans   &trans   &trans   &trans
&bootloader  &kp LEFT  &kp DOWN         &kp RIGHT        &trans           &trans           &trans           &trans           &trans           &trans  &trans   &trans   &trans   &trans
&trans       &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans  &trans   &trans   &trans   &trans
&trans       &trans    &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans
&kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&trans  &trans                    &trans  &trans     &trans  &trans  &trans          &kp RA(N7)      &kp RA(N8)    &kp RA(N9)       &kp RA(N0)  &kp RA(MINUS)  &trans        &trans  &trans
&trans  &kp RA(Q)                 &trans  &kp RA(E)  &trans  &trans  &kp HOME        &kp END         &trans        &trans           &trans      &trans         &kp RA(RBKT)  &trans
&trans  &trans                    &trans  &trans     &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans      &trans         &trans        &trans
&trans  &kp RA(NON_US_BACKSLASH)  &trans  &trans     &trans  &trans  &trans          &trans          &trans        &trans           &trans      &trans         &trans        &trans
&trans  &trans                    &trans  &trans     &trans  &trans  &trans          &trans          &trans        &trans
&trans
            >;
        };
    };
};
